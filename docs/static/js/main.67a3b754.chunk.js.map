{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACM,0BAAMC,SAXS,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAOhB,2BACMO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAAEP,GACpBF,EAAeE,EAAEQ,OAAOF,Y,uBCPvBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFDO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WACPxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEtBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKd,CAACpB,IAEGqB,EDfuBK,CAAa1B,GAA/Ba,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAEnB,OACI,oCACA,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEZ,yBAAKA,UAAW,aAEJH,EAAOJ,KAAI,SAAAC,GAAG,OACd,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACJD,UEfZkB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAI9B,OACI,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEM4C,EAAWpB,KAAK,SAACT,EAAU8B,GAAX,OACb,kBAAC,EAAD,CACAH,IAAK3B,EACLA,SAAUA,UCd7B+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.67a3b754.chunk.js","sourcesContent":["import React , {useState}from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = ( e ) => {\n            setInputValue( e.target.value );\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2 ){\n            setCategories( cats => [ inputValue, ...cats ] );\n            setInputValue('');\n        }\n        \n    }\n\n    return (\n          <form onSubmit = { handleSubmit }>\n          <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={handleInputChange}\n           />\n          </form>\n    )\n}\n\nAddCategory.propTypes ={\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async(category)=>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=YJIny6u7nudWNkz6peAPSUryyFVHNR3S`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id:img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n          <img src={url} alt={title}/>\n          <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images,loading} = useFetchGifs(category);\n\n    return (\n        <>\n        <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n\n        {loading && <p className='animate__animated animate__flash'>Loading...</p>}\n        \n        <div className= \"card-grid\">\n                {\n                    images.map(img => (\n                    <GifGridItem\n                    key={img.id}\n                    { ...img }\n                    />\n                    ))\n                }\n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from '../helpers/getGifts';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n       getGifs(category).then(imgs => {\n\n        setState({\n            data: imgs,\n            loading: false\n           });\n           \n\n       })\n    }, [category])\n\n    return state;\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n          <h2>GifExpertApp</h2>\n          <AddCategory setCategories={setCategories}/>\n          <hr />\n\n          <ol>\n              { \n                categories.map( (category, i) =>(\n                   <GifGrid \n                   key={category}\n                   category={category}/>\n                ))\n              }\n          </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}